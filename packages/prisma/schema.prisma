generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  quests    Quest[]
  investigations TaskInvestigation[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Quest {
  id          String   @id @default(cuid())
  ownerId     String
  title       String
  goal        String?
  context     String?
  constraints String?
  isPublic    Boolean  @default(false)
  status      String   @default("draft") // draft, active, completed
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner       User     @relation(fields: [ownerId], references: [id])
}

model Task {
  id        String @id @default(cuid())
  questId   String
  title     String
  details   String?
  extraContent String?
  order     Int
  status    String @default("todo") // todo, in-progress, done
  createdAt DateTime @default(now())
  quest     Quest  @relation(fields: [questId], references: [id])
  investigations TaskInvestigation[]
}

model TaskInvestigation {
  id            String   @id @default(cuid())
  taskId        String
  status        String   @default("pending")
  summary       String?
  details       String?
  error         String?
  prompt        String?
  initiatedById String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  task          Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  initiatedBy   User?    @relation(fields: [initiatedById], references: [id])

  @@index([taskId])
  @@index([createdAt])
}
