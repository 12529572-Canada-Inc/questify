name: Release

on:
  push:
    tags:
      - "v*.*.*" # e.g., v1.0.0

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack (for pnpm)
        run: corepack enable

      - name: Install pnpm dependencies
        run: pnpm install

      - name: Install dependencies
        run: pnpm install

      # --- Prisma Database Setup ---
      - name: Generate Prisma Client
        run: pnpm prisma:generate

      - name: Deploy Prisma Migrations
        working-directory: packages/prisma
        run: pnpm run deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # --- Build and Deploy Apps ---
      - name: Build apps
        run: |
          pnpm --filter nuxt build
          pnpm --filter worker build

      - name: Deploy Nuxt (Vercel)
        if: success()
        run: |
          npx vercel deploy --prod --yes --confirm \
            --token="${{ secrets.VERCEL_TOKEN }}" \
            --scope="${{ secrets.VERCEL_ORG_ID }}" \
            --cwd=apps/nuxt \
            -e REDIS_HOST="${{ secrets.REDIS_HOST }}" \
            -e REDIS_PORT="${{ secrets.REDIS_PORT }}" \
            -e REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}"

      - name: Deploy Worker (Docker)
        if: success()
        run: |
          # Build the Docker image using the worker Dockerfile
          docker build -f apps/worker/Dockerfile -t questify-worker ./apps/worker

          # Log in to Docker Hub
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          # Tag and push the image
          docker tag questify-worker:latest ${{ secrets.DOCKER_USERNAME }}/questify-worker:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/questify-worker:latest

