name: Release

on:
  push:
    tags:
      - "v*.*.*" # e.g., v1.0.0

env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack (for pnpm)
        run: corepack enable

      - name: Install pnpm dependencies
        run: pnpm install

      - name: Install dependencies
        run: pnpm install

      # --- Prisma Database Setup ---
      - name: Generate Prisma Client
        run: npx prisma generate --schema=packages/prisma/schema.prisma

      - name: Apply Prisma Migrations
        run: npx prisma migrate deploy --schema=packages/prisma/schema.prisma

      # --- Build and Deploy Apps ---
      - name: Build apps
        run: |
          pnpm --filter nuxt build
          pnpm --filter worker build

      - name: Deploy Nuxt (Vercel)
        if: success()
        run: |
          npx vercel --prod \
            --token=$VERCEL_TOKEN \
            -e REDIS_HOST="${{ secrets.REDIS_HOST }}" \
            -e REDIS_PORT="${{ secrets.REDIS_PORT }}" \
            -e REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}"

      - name: Deploy Worker (Docker)
        if: success()
        run: |
          # Build the Docker image
          docker build -t questify-worker ./apps/worker

          # Log in to Docker
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

          # Push the image to Docker Hub
          docker tag questify-worker:latest $DOCKER_USERNAME/questify-worker:latest
          docker push $DOCKER_USERNAME/questify-worker:latest

          # Run the container with secrets injected at runtime
          docker run -d \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            -e REDIS_HOST="${{ secrets.REDIS_HOST }}" \
            -e REDIS_PORT="${{ secrets.REDIS_PORT }}" \
            -e REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}" \
            -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            --name questify-worker $DOCKER_USERNAME/questify-worker:latest

